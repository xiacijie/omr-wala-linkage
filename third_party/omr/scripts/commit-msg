#!/usr/bin/env ruby
###############################################################################
# Copyright (c) 2017, 2017 IBM Corp. and others
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which accompanies this
# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
# or the Apache License, Version 2.0 which accompanies this distribution and
# is available at https://www.apache.org/licenses/LICENSE-2.0.
#           
# This Source Code may also be made available under the following
# Secondary Licenses when the conditions for such availability set
# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
# General Public License, version 2 with the GNU Classpath
# Exception [1] and GNU General Public License, version 2 with the
# OpenJDK Assembly Exception [2].
# 
# [1] https://www.gnu.org/software/classpath/license.html
# [2] http://openjdk.java.net/legal/assembly-exception.html
#                       
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
###############################################################################

# This script is intended to be used under omr_repo_dir/.git/hooks to check
# each git commit message against OMR contributing guidelines. The script
# needs to be executable and it will be invoked when a 'git commit' command 
# is issued. OMR contributing guidelines can be found at:
# https://github.com/eclipse/omr/blob/master/CONTRIBUTING.md#commit-guidelines

message_file = ARGV[0]
message = File.read(message_file)

# remove git generated messages
commit = ""
message.each_line do |line|
  if (line.match(/^(?!#).*$/))
    commit.concat(line)
  elsif (line.match(/^# ------------------------ >8 -.*$/))
     # Stop processing after seeing the snip marker. 
     break  
  end
end

title, body = commit.split("\n", 2)

# check commit title length
title_len = title.length
#puts "Title is #{title}, length is #{title_len}"

if (title_len > 0 && title_len < 70)
  # shortcut to skip commit message checking
  if (title.match(/^skip.*/) || title.match(/^fixup.*/))
    puts "PASSED: Skipping commit checks!\n"
    exit 0
  end

  if (title.match(/^[A-Z]/) && title.match(/[a-zA-Z0-9]$/))
    state = "success"
  else
    state = "failure"
    description = "Commit title should begin with a capital letter and" \
                  " does not end in a punctuation."
  end
else
  state = "failure"
  description = "Commit title should be less than 70 characters: actual #{title_len}"
end

# check commit message body length
if (state == "success")
  body.each_line.with_index() do |line, j|
    line.chomp!
#    puts "Line length is #{line.length}"
    if (line.length >= 0 && line.length <= 72)
      if (j == 0 && line.length != 0)
	state = "failure"
	description = "Commit message after title should be blank."
	break
      else
        state = "success"
      end
    else
      state = "success"
      puts "[WARNING] Commit body should be wrapped at 72 characters, " \
           "where reasonable: line #{j+1} actual #{line.length}"
    end
  end
end

# check signed-off line
if (state == "success")
  lines = body.split(/\n+/)
  if (lines.empty?)
    state = "failure"
    description = "Commit requires a message body and a sign-off footer."
  elsif (!lines.last.match(/^Signed-off-by/))
    state = "failure"
    description = "Commit requires a sign-off footer."
  elsif (lines.count < 3)
    state = "failure"
    description = "Commit requires a message body explaining your changes."
  else
    state = "success"
  end
end

# display results
if (state == "failure")
  puts "FAILED: #{description}" 
  puts "Please see guidelines: https://github.com/eclipse/omr/blob/master/CONTRIBUTING.md#commit-guidelines\n"
  exit 1
end

puts "PASSED: All OK!\n"
exit 0
